[{"F:\\work\\Js-FrameWorks\\React\\Academy IT\\Project\\contact\\src\\index.js":"1","F:\\work\\Js-FrameWorks\\React\\Academy IT\\Project\\contact\\src\\App.js":"2","F:\\work\\Js-FrameWorks\\React\\Academy IT\\Project\\contact\\src\\reportWebVitals.js":"3","F:\\work\\Js-FrameWorks\\React\\Academy IT\\Project\\contact\\src\\components\\contacts\\Contacts.js":"4","F:\\work\\Js-FrameWorks\\React\\Academy IT\\Project\\contact\\src\\Context.js":"5","F:\\work\\Js-FrameWorks\\React\\Academy IT\\Project\\contact\\src\\components\\contacts\\EditContact.js":"6","F:\\work\\Js-FrameWorks\\React\\Academy IT\\Project\\contact\\src\\components\\contacts\\AddContact.js":"7","F:\\work\\Js-FrameWorks\\React\\Academy IT\\Project\\contact\\src\\components\\layout\\Header.js":"8","F:\\work\\Js-FrameWorks\\React\\Academy IT\\Project\\contact\\src\\components\\page\\About.js":"9","F:\\work\\Js-FrameWorks\\React\\Academy IT\\Project\\contact\\src\\components\\page\\NotFound.js":"10","F:\\work\\Js-FrameWorks\\React\\Academy IT\\Project\\contact\\src\\components\\contacts\\Contact.js":"11","F:\\work\\Js-FrameWorks\\React\\Academy IT\\Project\\contact\\src\\components\\layout\\TextInput.js":"12","F:\\work\\Js-FrameWorks\\React\\Academy IT\\Project\\grid\\src\\index.js":"13","F:\\work\\Js-FrameWorks\\React\\Academy IT\\Project\\grid\\src\\reportWebVitals.js":"14","F:\\work\\Js-FrameWorks\\React\\Academy IT\\Project\\grid\\src\\App.js":"15","F:\\work\\Js-FrameWorks\\React\\Academy IT\\Project\\grid\\src\\Context.js":"16","F:\\work\\Js-FrameWorks\\React\\Academy IT\\Project\\grid\\src\\components\\Grids.js":"17","F:\\work\\Js-FrameWorks\\React\\Academy IT\\Project\\grid\\src\\components\\Grid.js":"18"},{"size":500,"mtime":499162500000,"results":"19","hashOfConfig":"20"},{"size":1233,"mtime":1607800352349,"results":"21","hashOfConfig":"20"},{"size":362,"mtime":499162500000,"results":"22","hashOfConfig":"20"},{"size":600,"mtime":1607777523222,"results":"23","hashOfConfig":"20"},{"size":1287,"mtime":1607798898332,"results":"24","hashOfConfig":"20"},{"size":3564,"mtime":1607800771946,"results":"25","hashOfConfig":"20"},{"size":3190,"mtime":1607800560288,"results":"26","hashOfConfig":"20"},{"size":1261,"mtime":1607608537881,"results":"27","hashOfConfig":"20"},{"size":1546,"mtime":1607800405032,"results":"28","hashOfConfig":"20"},{"size":300,"mtime":1607799934247,"results":"29","hashOfConfig":"20"},{"size":2158,"mtime":1607800175447,"results":"30","hashOfConfig":"20"},{"size":975,"mtime":1607801901629,"results":"31","hashOfConfig":"20"},{"size":500,"mtime":499162500000,"results":"32","hashOfConfig":"33"},{"size":362,"mtime":499162500000,"results":"34","hashOfConfig":"33"},{"size":424,"mtime":1608732031284,"results":"35","hashOfConfig":"33"},{"size":660,"mtime":1608731867970,"results":"36","hashOfConfig":"33"},{"size":820,"mtime":1608732096091,"results":"37","hashOfConfig":"33"},{"size":567,"mtime":1608732190850,"results":"38","hashOfConfig":"33"},{"filePath":"39","messages":"40","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"41"},"1ed365f",{"filePath":"42","messages":"43","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"41"},{"filePath":"44","messages":"45","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"41"},{"filePath":"46","messages":"47","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"41"},{"filePath":"48","messages":"49","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"41"},{"filePath":"50","messages":"51","errorCount":0,"warningCount":2,"fixableErrorCount":0,"fixableWarningCount":0,"source":"52","usedDeprecatedRules":"41"},{"filePath":"53","messages":"54","errorCount":0,"warningCount":1,"fixableErrorCount":0,"fixableWarningCount":0,"source":"55","usedDeprecatedRules":"41"},{"filePath":"56","messages":"57","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"41"},{"filePath":"58","messages":"59","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"41"},{"filePath":"60","messages":"61","errorCount":0,"warningCount":1,"fixableErrorCount":0,"fixableWarningCount":0,"source":"62","usedDeprecatedRules":"41"},{"filePath":"63","messages":"64","errorCount":0,"warningCount":3,"fixableErrorCount":0,"fixableWarningCount":0,"source":"65","usedDeprecatedRules":"41"},{"filePath":"66","messages":"67","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0},{"filePath":"68","messages":"69","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"70"},"c09cth",{"filePath":"71","messages":"72","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"70"},{"filePath":"73","messages":"74","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"70"},{"filePath":"75","messages":"76","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"70"},{"filePath":"77","messages":"78","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"70"},{"filePath":"79","messages":"80","errorCount":0,"warningCount":2,"fixableErrorCount":0,"fixableWarningCount":0,"source":"81"},"F:\\work\\Js-FrameWorks\\React\\Academy IT\\Project\\contact\\src\\index.js",[],["82","83"],"F:\\work\\Js-FrameWorks\\React\\Academy IT\\Project\\contact\\src\\App.js",[],"F:\\work\\Js-FrameWorks\\React\\Academy IT\\Project\\contact\\src\\reportWebVitals.js",[],"F:\\work\\Js-FrameWorks\\React\\Academy IT\\Project\\contact\\src\\components\\contacts\\Contacts.js",[],"F:\\work\\Js-FrameWorks\\React\\Academy IT\\Project\\contact\\src\\Context.js",[],"F:\\work\\Js-FrameWorks\\React\\Academy IT\\Project\\contact\\src\\components\\contacts\\EditContact.js",["84","85"],"import React, { Component } from 'react'\r\nimport { Consumer } from '../../Context'\r\nimport { v4 as uuid } from 'uuid'\r\nimport TextInput from '../layout/TextInput'\r\nimport axios from 'axios'\r\nimport { sync } from 'glob'\r\nexport default class EditContact extends Component {\r\n  state = {\r\n    name: '',\r\n    email: '',\r\n    phone: '',\r\n    error: {},\r\n  }\r\n  onStateChange = (e) => {\r\n    this.setState({\r\n      [e.target.name]: e.target.value,\r\n    })\r\n  }\r\n  updateContact = async (dispatch, e) => {\r\n    e.preventDefault()\r\n    const { id } = this.props.match.params\r\n    const { name, email, phone } = this.state\r\n\r\n    if (name === '') {\r\n      this.setState({ error: { name: 'وارد کردن نام اجباری است' } })\r\n      return\r\n    }\r\n    if (email === '') {\r\n      this.setState({ error: { email: 'وارد کردن ایمیل اجباری است' } })\r\n      return\r\n    }\r\n    if (phone === '') {\r\n      this.setState({ error: { phone: 'وارد کردن شماره موبایل اجباری است' } })\r\n      return\r\n    }\r\n    const data = {\r\n      id,\r\n      name,\r\n      email,\r\n      phone,\r\n    }\r\n    const res = await axios.put(\r\n      `https://jsonplaceholder.typicode.com/users/${id}`,\r\n      data\r\n    )\r\n    dispatch({ type: 'UPDATE_CONTACT', payload: res.data })\r\n    this.setState({\r\n      name: '',\r\n      email: '',\r\n      phone: '',\r\n    })\r\n    this.props.history.push('/')\r\n  }\r\n  async componentDidMount() {\r\n    const { id } = this.props.match.params\r\n    const res = await axios.get(\r\n      `https://jsonplaceholder.typicode.com/users/${id}`\r\n    )\r\n    const contact = res.data\r\n    this.setState({\r\n      name: contact.name,\r\n      email: contact.email,\r\n      phone: contact.phone,\r\n      error: {},\r\n    })\r\n  }\r\n\r\n  render() {\r\n    const { name, email, phone, error } = this.state\r\n    return (\r\n      <Consumer>\r\n        {(value) => {\r\n          const { dispatch } = value\r\n          return (\r\n            <div className='card mb-4'>\r\n              <div className='card-header'>اضافه کردن مخاطب</div>\r\n              <div className='card-body'>\r\n                <form onSubmit={this.updateContact.bind(this, dispatch)}>\r\n                  <TextInput\r\n                    lable='نام'\r\n                    name='name'\r\n                    value={name}\r\n                    placeholder='نام را وارد کنید'\r\n                    onChange={this.onStateChange}\r\n                    error={error.name}\r\n                  />\r\n                  <TextInput\r\n                    lable='ایمیل'\r\n                    name='email'\r\n                    value={email}\r\n                    placeholder='ایمیل را وارد کنید'\r\n                    onChange={this.onStateChange}\r\n                    type='email'\r\n                    error={error.email}\r\n                  />\r\n                  <TextInput\r\n                    lable='موبایل'\r\n                    name='phone'\r\n                    value={phone}\r\n                    placeholder='موبایل را وارد کنید'\r\n                    onChange={this.onStateChange}\r\n                    error={error.phone}\r\n                  />\r\n                  <div>\r\n                    <input\r\n                      type='submit'\r\n                      value='ویرایش کاربر'\r\n                      className='btn btn btn-success btn-block'\r\n                    />\r\n                  </div>\r\n                </form>\r\n              </div>\r\n            </div>\r\n          )\r\n        }}\r\n      </Consumer>\r\n    )\r\n  }\r\n}\r\n","F:\\work\\Js-FrameWorks\\React\\Academy IT\\Project\\contact\\src\\components\\contacts\\AddContact.js",["86"],"import React, { Component } from 'react'\r\nimport { Consumer } from '../../Context'\r\nimport { v4 as uuid } from 'uuid'\r\nimport TextInput from '../layout/TextInput'\r\nimport axios from 'axios'\r\nimport { sync } from 'glob'\r\nexport default class AddContact extends Component {\r\n  state = {\r\n    name: '',\r\n    email: '',\r\n    phone: '',\r\n    error: {},\r\n  }\r\n  onStateChange = (e) => {\r\n    this.setState({\r\n      [e.target.name]: e.target.value,\r\n    })\r\n  }\r\n  addContact = async (dispatch, e) => {\r\n    e.preventDefault()\r\n    const { name, email, phone } = this.state\r\n    if (name === '') {\r\n      this.setState({ error: { name: 'وارد کردن نام اجباری است' } })\r\n      return\r\n    }\r\n    if (email === '') {\r\n      this.setState({ error: { email: 'وارد کردن ایمیل اجباری است' } })\r\n      return\r\n    }\r\n    if (phone === '') {\r\n      this.setState({ error: { phone: 'وارد کردن شماره موبایل اجباری است' } })\r\n      return\r\n    }\r\n    const contact = {\r\n      id: uuid(),\r\n      name,\r\n      email,\r\n      phone,\r\n    }\r\n\r\n    const res = await axios.post(\r\n      'https://jsonplaceholder.typicode.com/users',\r\n      contact\r\n    )\r\n    dispatch({ typ: 'ADD_CONTACT', payload: res.data })\r\n\r\n    this.setState({\r\n      name: '',\r\n      email: '',\r\n      phone: '',\r\n    })\r\n    this.props.history.push('/')\r\n  }\r\n\r\n  render() {\r\n    const { name, email, phone, error } = this.state\r\n\r\n    return (\r\n      <Consumer>\r\n        {(value) => {\r\n          const { dispatch } = value\r\n          return (\r\n            <div className='card mb-4'>\r\n              <div className='card-header'>اضافه کردن مخاطب</div>\r\n              <div className='card-body'>\r\n                <form onSubmit={this.addContact.bind(this, dispatch)}>\r\n                  <TextInput\r\n                    lable='نام'\r\n                    name='name'\r\n                    value={name}\r\n                    placeholder='نام را وارد کنید'\r\n                    onChange={this.onStateChange}\r\n                    error={error.name}\r\n                  />\r\n                  <TextInput\r\n                    lable='ایمیل'\r\n                    name='email'\r\n                    value={email}\r\n                    placeholder='ایمیل را وارد کنید'\r\n                    onChange={this.onStateChange}\r\n                    type='email'\r\n                    error={error.email}\r\n                  />\r\n                  <TextInput\r\n                    lable='موبایل'\r\n                    name='phone'\r\n                    value={phone}\r\n                    placeholder='موبایل را وارد کنید'\r\n                    onChange={this.onStateChange}\r\n                    error={error.phone}\r\n                  />\r\n\r\n                  <div>\r\n                    <input\r\n                      type='submit'\r\n                      value='اضافه کردن کاربر'\r\n                      className='btn btn btn-success btn-block'\r\n                    />\r\n                  </div>\r\n                </form>\r\n              </div>\r\n            </div>\r\n          )\r\n        }}\r\n      </Consumer>\r\n    )\r\n  }\r\n}\r\n","F:\\work\\Js-FrameWorks\\React\\Academy IT\\Project\\contact\\src\\components\\layout\\Header.js",[],"F:\\work\\Js-FrameWorks\\React\\Academy IT\\Project\\contact\\src\\components\\page\\About.js",[],"F:\\work\\Js-FrameWorks\\React\\Academy IT\\Project\\contact\\src\\components\\page\\NotFound.js",["87"],"import React from 'react'\r\n\r\nconst NotFound = () => {\r\n  return (\r\n    <div className='text-center mt-5'>\r\n      <img src='./images/fail.png' width='60' />\r\n      <h2 className='text-center text-danger mt-5'>صفحه مورد نظر یافت نشد</h2>\r\n    </div>\r\n  )\r\n}\r\nexport default NotFound\r\n","F:\\work\\Js-FrameWorks\\React\\Academy IT\\Project\\contact\\src\\components\\contacts\\Contact.js",["88","89","90"],"import React, { Component } from 'react'\r\nimport PropTypes from 'prop-types'\r\nimport { Consumer } from '../../Context'\r\nimport axios from 'axios'\r\nimport { Link } from 'react-router-dom'\r\nclass Contact extends Component {\r\n  constructor() {\r\n    super()\r\n    this.state = {\r\n      showInfo: true,\r\n    }\r\n  }\r\n  showClick = (e) => {\r\n    this.setState({ showInfo: !this.state.showInfo })\r\n  }\r\n  removeContact = async (id, dispatch) => {\r\n    const res = await axios.delete(\r\n      'https://jsonplaceholder.typicode.com/users/${id}'\r\n    )\r\n    dispatch({\r\n      type: 'DELETE_CONTACT',\r\n      payload: id,\r\n    })\r\n  }\r\n  render() {\r\n    const { id, name, email, phone } = this.props.contact\r\n    const { showInfo } = this.state\r\n    return (\r\n      <Consumer>\r\n        {(value) => {\r\n          const { dispatch } = value\r\n          return (\r\n            <div className='card card-body mb-2 shadow'>\r\n              <img src='./images/profile.png' width='40' />\r\n              <h4 className='mb-3'>\r\n                {name}\r\n                <i className='fas fa-sort-down' onClick={this.showClick}></i>\r\n                <i\r\n                  className='fas fa-times float-left text-danger'\r\n                  onClick={this.removeContact.bind(this, id, dispatch)}\r\n                ></i>\r\n                <Link to={`/contact/edit/${id}`}>\r\n                  <span\r\n                    style={{\r\n                      float: 'left',\r\n                      color: 'blue',\r\n                      fontSize: 13,\r\n                      paddingTop: 10,\r\n                      cursor: 'pointer',\r\n                    }}\r\n                  >\r\n                    ویرایش\r\n                  </span>\r\n                </Link>\r\n              </h4>\r\n              {showInfo ? (\r\n                <ul className='list-group'>\r\n                  <li className='list-group-item'>{email}</li>\r\n                  <li className='list-group-item'>{phone}</li>\r\n                </ul>\r\n              ) : null}\r\n            </div>\r\n          )\r\n        }}\r\n      </Consumer>\r\n    )\r\n  }\r\n}\r\nContact.propTypes = {\r\n  contact: PropTypes.object.isRequired,\r\n}\r\nexport default Contact\r\n","F:\\work\\Js-FrameWorks\\React\\Academy IT\\Project\\contact\\src\\components\\layout\\TextInput.js",[],"F:\\work\\Js-FrameWorks\\React\\Academy IT\\Project\\grid\\src\\index.js",[],["91","92"],"F:\\work\\Js-FrameWorks\\React\\Academy IT\\Project\\grid\\src\\reportWebVitals.js",[],"F:\\work\\Js-FrameWorks\\React\\Academy IT\\Project\\grid\\src\\App.js",[],"F:\\work\\Js-FrameWorks\\React\\Academy IT\\Project\\grid\\src\\Context.js",[],"F:\\work\\Js-FrameWorks\\React\\Academy IT\\Project\\grid\\src\\components\\Grids.js",[],"F:\\work\\Js-FrameWorks\\React\\Academy IT\\Project\\grid\\src\\components\\Grid.js",["93","94"],"import React, { Component } from 'react'\r\nimport { Consumer } from '../Context'\r\nclass Grid extends Component {\r\n  render() {\r\n    const { id, name, email, phone } = this.props.grid\r\n\r\n    return (\r\n      <Consumer>\r\n        {(value) => {\r\n          const { dispatch } = value\r\n\r\n          return (\r\n            <tbody>\r\n              <tr>\r\n                <td>{name}</td>\r\n                <td>{email}</td>\r\n                <td>{phone}</td>\r\n              </tr>\r\n            </tbody>\r\n          )\r\n        }}\r\n      </Consumer>\r\n    )\r\n  }\r\n}\r\n\r\nexport default Grid\r\n",{"ruleId":"95","replacedBy":"96"},{"ruleId":"97","replacedBy":"98"},{"ruleId":"99","severity":1,"message":"100","line":3,"column":16,"nodeType":"101","messageId":"102","endLine":3,"endColumn":20},{"ruleId":"99","severity":1,"message":"103","line":6,"column":10,"nodeType":"101","messageId":"102","endLine":6,"endColumn":14},{"ruleId":"99","severity":1,"message":"103","line":6,"column":10,"nodeType":"101","messageId":"102","endLine":6,"endColumn":14},{"ruleId":"104","severity":1,"message":"105","line":6,"column":7,"nodeType":"106","endLine":6,"endColumn":49},{"ruleId":"99","severity":1,"message":"107","line":17,"column":11,"nodeType":"101","messageId":"102","endLine":17,"endColumn":14},{"ruleId":"108","severity":1,"message":"109","line":18,"column":7,"nodeType":"110","messageId":"111","endLine":18,"endColumn":57},{"ruleId":"104","severity":1,"message":"105","line":34,"column":15,"nodeType":"106","endLine":34,"endColumn":60},{"ruleId":"95","replacedBy":"112"},{"ruleId":"97","replacedBy":"113"},{"ruleId":"99","severity":1,"message":"114","line":5,"column":13,"nodeType":"101","messageId":"102","endLine":5,"endColumn":15},{"ruleId":"99","severity":1,"message":"115","line":10,"column":19,"nodeType":"101","messageId":"102","endLine":10,"endColumn":27},"no-native-reassign",["116"],"no-negated-in-lhs",["117"],"no-unused-vars","'uuid' is defined but never used.","Identifier","unusedVar","'sync' is defined but never used.","jsx-a11y/alt-text","img elements must have an alt prop, either with meaningful text, or an empty string for decorative images.","JSXOpeningElement","'res' is assigned a value but never used.","no-template-curly-in-string","Unexpected template string expression.","Literal","unexpectedTemplateExpression",["116"],["117"],"'id' is assigned a value but never used.","'dispatch' is assigned a value but never used.","no-global-assign","no-unsafe-negation"]